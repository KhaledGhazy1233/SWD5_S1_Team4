@model List<object>
@{
    ViewData["Title"] = "My Orders";
    Layout = "_CustomerLayout";
}

<div class="container-fluid">

    <div class="row mb-4">
        <div class="col-12">
            <h1 class="h3 text-gray-800">My Orders</h1>
            <p>Welcome, <strong>@ViewBag.UserName</strong> (@ViewBag.Email)</p>
        </div>
    </div>

    <!-- Orders List -->
    <div class="card shadow mb-4">        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Order History</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="ordersTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Date</th>
                            <th>Status</th>
                            <th>Tracking #</th>
                            <th>Items</th>
                            <th>Total</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            <tr>
                                <td>@order.GetType().GetProperty("Id").GetValue(order, null)</td>
                                <td>@(((DateTime)order.GetType().GetProperty("Date").GetValue(order, null)).ToString("MMM dd, yyyy"))</td>
                                <td>
                                    @{
                                        var status = order.GetType().GetProperty("Status").GetValue(order, null).ToString();
                                        var badgeClass = status switch
                                        {
                                            "Delivered" => "badge bg-success",
                                            "Shipped" => "badge bg-primary",
                                            "Processing" => "badge bg-warning",
                                            "Cancelled" => "badge bg-danger",
                                            _ => "badge bg-secondary"
                                        };
                                    }
                                    <span class="@badgeClass">@status</span>
                                </td>
                                <td>@order.GetType().GetProperty("TrackingNumber").GetValue(order, null)</td>
                                <td>@order.GetType().GetProperty("Items").GetValue(order, null)</td>
                                <td>$@(((decimal)order.GetType().GetProperty("Total").GetValue(order, null)).ToString("0.00"))</td>
                                <td>
                                    <button class="btn btn-sm btn-primary view-order-btn" data-id="@order.GetType().GetProperty("Id").GetValue(order, null)">
                                        <i class="fas fa-eye"></i> View
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#ordersTable').DataTable();
            
            // View order button click handler
            $('.view-order-btn').on('click', function() {
                var orderId = $(this).data('id');                // Navigate to order details page
                alert('Loading details for order: ' + orderId);
            });
        });
    </script>
}