@model DepiProject.Models.Product

@{
    ViewData["Title"] = "Product Details";
}

<div class="container mt-5">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-controller="Product" asp-action="Index">Products</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
        </ol>
    </nav>

    <div class="row">
        <div class="col-md-6">
            <img src="@Model.ImageUrl" class="img-fluid product-image" alt="@Model.Name" style="max-height: 400px; width: auto;">
        </div>
        <div class="col-md-6">
            <h1 class="mb-4">@Model.Name</h1>
            
            <div class="mb-3">
                @if (Model.DiscountPercentage > 0)
                {
                    var discountedPrice = Model.Price - (Model.Price * (Model.DiscountPercentage / 100));
                    <h4>
                        <span class="text-danger text-decoration-line-through me-2">$@Model.Price.ToString("0.00")</span>
                        <span class="text-success">$@discountedPrice.ToString("0.00")</span>
                        <span class="badge bg-danger">@Model.DiscountPercentage% OFF</span>
                    </h4>
                }
                else
                {
                    <h4 class="text-success">$@Model.Price.ToString("0.00")</h4>
                }
            </div>
            
            <p class="lead">@Model.Description</p>
            
            <div class="d-flex align-items-center mb-3">
                <span class="me-3">Availability:</span>
                @if (Model.IsAvailable && Model.StockQuantity > 0)
                {
                    <span class="badge bg-success">In Stock (@Model.StockQuantity available)</span>
                }
                else
                {
                    <span class="badge bg-danger">Out of Stock</span>
                }
            </div>
            
            <div class="mb-3">
                <span class="fw-bold">Brand:</span> @Model.Brand
            </div>
            
            <div class="mb-3">
                <span class="fw-bold">Model:</span> @Model.Model
            </div>
            
            <div class="mb-4">
                <span class="fw-bold">Warranty:</span> @Model.WarrantyInfo
            </div>

            @if (Model.IsAvailable && Model.StockQuantity > 0)
            {
                <div class="d-flex align-items-center mb-4">
                    <div class="input-group me-3" style="max-width: 150px;">
                        <button class="btn btn-outline-secondary" type="button" id="decreaseBtn">-</button>
                        <input type="number" class="form-control text-center" value="1" id="quantity" min="1" max="@Model.StockQuantity">
                        <button class="btn btn-outline-secondary" type="button" id="increaseBtn">+</button>
                    </div>
                    <button class="btn btn-success" id="addToCartBtn">Add to Cart</button>
                </div>
            }

            <div class="card mt-4">
                <div class="card-header">
                    <h5 class="mb-0">Technical Specifications</h5>
                </div>
                <div class="card-body">
                    <p>@Model.TechnicalSpecifications</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const quantityInput = document.getElementById('quantity');
            const decreaseBtn = document.getElementById('decreaseBtn');
            const increaseBtn = document.getElementById('increaseBtn');
            const maxQuantity = @Model.StockQuantity;
            
            decreaseBtn?.addEventListener('click', function() {
                let currentValue = parseInt(quantityInput.value);
                if (currentValue > 1) {
                    quantityInput.value = currentValue - 1;
                }
            });
            
            increaseBtn?.addEventListener('click', function() {
                let currentValue = parseInt(quantityInput.value);
                if (currentValue < maxQuantity) {
                    quantityInput.value = currentValue + 1;
                }
            });
        });
    </script>
}
